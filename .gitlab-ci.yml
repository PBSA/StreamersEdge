stages:
  - test
  - build
  - deploy

test:
  image: node:10.16-alpine
  stage: test
  variables:
    DB_USER: postgres
    DB_PASSWORD: ""
    DB_HOST: postgres
    DB_PORT: 5432
    DB_DATABASE: streamers-edge-test
    POSTGRES_DB: streamers-edge-test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: ""
    TWITCH_CLIENT_ID: $TEST_TWITCH_CLIENT_ID
    TWITCH_CLIENT_SECRET: $TEST_TWITCH_CLIENT_SECRET
    GOOGLE_CLIENT_ID: $TEST_GOOGLE_CLIENT_ID
    GOOGLE_CLIENT_SECRET: $TEST_GOOGLE_CLIENT_SECRET
    FACEBOOK_CLIENT_ID: $TEST_FACEBOOK_CLIENT_ID
    FACEBOOK_CLIENT_SECRET: $TEST_FACEBOOK_CLIENT_SECRET
    PUBG_API_KEY: $TEST_PUBG_API_KEY
    PEERPLAYS_PAYMENT_ACCOUNT_WIF: $TEST_PEERPLAYS_PAYMENT_ACCOUNT_WIF
    COINMARKETCAP_API_KEY: $TEST_COINMARKETCAP_API_KEY
  services:
    - postgres:latest
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - node_modules
  script:
    - apk add python make g++
    - npm i
    - npm run db-migrate-all
    - npm run test:audit
    - npm run test:lint
    - npm run test:coverage
  tags:
    - docker
  only:
    - merge_requests
    - develop
    - master
    - web

deployToDev:
  stage: deploy
  script:
    - bash deploy/deployToDev.sh
  only:
    - develop

deployToStaging:
  stage: deploy
  script:
    - bash deploy/deployToStaging.sh
  when: manual

